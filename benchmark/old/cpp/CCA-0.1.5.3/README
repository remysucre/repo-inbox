A Library and Preprocessor for Causal Commutative Arrows (CCA)
==============================================================

This library implements the CCA normalization described originally in the 
paper [1] (which is now superseded by [2], a more detailed journal version).  
It uses Template Haskell as a staged compilation for arrow programs written
in arrow syntax. A modified arrow preprocessor based on Paterson's arrowp
program, now called ccap, is provided to help preparing proper input to 
Template Haskell. 

Note that this is a preliminary release, and still very experimental. Please
send your feedbacks directly to Paul H. Liu <paul@thev.net>. All suggestions 
are welcome.

----
Last Modified: Mon May 12 2014

[1]: Hai Liu, Eric Cheng, and Paul Hudak. Causal Commutative Arrows and Their
Optimization. Proceedings of the 14th ACM SIGPLAN International Conference on
Functional Programming (ICFP 2009). Edinburgh, Scotland. August 2009 

[2]: Hai Liu, Eric Cheng, and Paul Hudak. Causal Commutative Arrows. Journal 
of Functional Programming, volume 21, issue 4-5, pp. 467-496. September 2011. 
(Extended journal version of our ICFP09 paper.)
