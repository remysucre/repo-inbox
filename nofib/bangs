fibon/Hackage/Regex/bench/Main.hs:{-# LANGUAGE BangPatterns #-}
fibon/Hackage/Simgi/mersenne-random-pure64/System/Random/Mersenne/Pure64/MTBlock.hs:{-# LANGUAGE MagicHash, UnboxedTuples, BangPatterns #-}
fibon/Hackage/Simgi/mersenne-random-pure64/tests/Unit.hs:{-# LANGUAGE BangPatterns #-}
fibon/Hackage/Simgi/mersenne-random-pure64/tests/copy.hs:{-# LANGUAGE BangPatterns #-}
fibon/Hackage/Funsat/Makefile:HC_OPTS += -i. -isrc -igenerated -ibimap -ibitset -ifgl -iparse-dimacs -iparsec -isyb/src -package array -package base -package bytestring -package containers -package mtl -package pretty -package random -package time -XCPP -XScopedTypeVariables -XCPP -XBangPatterns -XScopedTypeVariables -XTypeSynonymInstances -XMultiParamTypeClasses -XFunctionalDependencies -XFlexibleInstances -XFlexibleContexts -XDeriveDataTypeable -XRank2Types
fibon/Hackage/Funsat/src/Funsat/Types.hs:            ,BangPatterns
fibon/Hackage/Xsact/src/EST.lhs:{-# LANGUAGE BangPatterns, MultiParamTypeClasses #-}
fibon/Hackage/Gf/src/runtime/haskell/PGF/Parse.hs:{-# LANGUAGE BangPatterns #-}
fibon/Hackage/Gf/src/runtime/haskell/PGF.hs:{-# LANGUAGE BangPatterns #-}
fibon/Hackage/Gf/src/compiler/GF/Compile/GeneratePMCFG.hs:{-# LANGUAGE BangPatterns, RankNTypes, FlexibleInstances, MultiParamTypeClasses #-}
fibon/Hackage/Gf/src/compiler/GF/Grammar/Lexer.x:{-# LANGUAGE BangPatterns #-}
fibon/Hackage/Fgl/Data/Graph/Inductive/PatriciaTree.hs:{-# LANGUAGE ScopedTypeVariables, BangPatterns #-}
fibon/Hackage/Fgl/Main.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Stencil.hs:{-# LANGUAGE 	MagicHash, PatternGuards, BangPatterns, TemplateHaskell, QuasiQuotes,
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Operators/Reduction.hs:{-# LANGUAGE BangPatterns, ExplicitForAll, TypeOperators #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Operators/Select.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Internals/Base.hs:{-# LANGUAGE ExplicitForAll, TypeOperators, FlexibleInstances, UndecidableInstances, BangPatterns,
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Internals/EvalChunked.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Internals/Forcing.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Internals/EvalCursored.hs:{-# LANGUAGE BangPatterns, UnboxedTuples #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Internals/Select.hs:{-# LANGUAGE BangPatterns, ExplicitForAll, ScopedTypeVariables, PatternGuards #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Internals/EvalReduction.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Internals/EvalBlockwise.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/_RepaLib/repa/Data/Array/Repa/Specialised/Dim2.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/_RepaLib/repa-algorithms/Data/Array/Repa/Algorithms/FFT.hs:{-# LANGUAGE TypeOperators, PatternGuards, RankNTypes, ScopedTypeVariables, BangPatterns, FlexibleContexts #-}
fibon/Repa/_RepaLib/repa-algorithms/Data/Array/Repa/Algorithms/Convolve.hs:{-# LANGUAGE BangPatterns, PackageImports #-}
fibon/Repa/_RepaLib/repa-algorithms/Data/Array/Repa/Algorithms/Randomish.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/_RepaLib/repa-algorithms/Data/Array/Repa/Algorithms/Iterate.hs:{-# LANGUAGE BangPatterns, PackageImports #-}
fibon/Repa/Laplace/SolverStencil.hs:{-# LANGUAGE BangPatterns, TemplateHaskell, QuasiQuotes #-}
fibon/Repa/Laplace/SolverGet.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/Laplace/Main.hs:{-# LANGUAGE BangPatterns #-}
fibon/Repa/Blur/Main.hs:{-# LANGUAGE PackageImports, BangPatterns, TemplateHaskell, QuasiQuotes #-}
fibon/Repa/Sobel/Solver.hs:{-# LANGUAGE PackageImports, BangPatterns, QuasiQuotes, PatternGuards #-}
fibon/Repa/Sobel/Main.hs:{-# LANGUAGE PackageImports, BangPatterns, QuasiQuotes, PatternGuards #-}
fibon/Repa/Canny/Main.hs:{-# LANGUAGE PackageImports, BangPatterns, QuasiQuotes, PatternGuards #-}
fibon/Shootout/ChameneosRedux/chameneosredux.hs:{-# LANGUAGE GeneralizedNewtypeDeriving, BangPatterns, CPP #-}
parallel/coins/coins.hs:{-# LANGUAGE BangPatterns #-}
parallel/nbody/nbody.hs:{-# LANGUAGE CPP, MagicHash, UnboxedTuples, BangPatterns #-}
parallel/quicksort/QuickSort.hs:{-# LANGUAGE BangPatterns #-}
parallel/minimax/Board.hs:{-# LANGUAGE BangPatterns #-}
parallel/matmult/MatMult.hs:{-# LANGUAGE BangPatterns #-}
parallel/gray/Illumination.hs:{-# LANGUAGE BangPatterns,CPP #-}
parallel/transclos/Main.hs:{-# OPTIONS_GHC -XFlexibleInstances -XBangPatterns #-}
parallel/mandel/Mandel.lhs:{-# LANGUAGE BangPatterns,CPP #-}
parallel/ray/Main.lhs:> {-# LANGUAGE BangPatterns,CPP #-}
parallel/prsa/Rsa.hs:{-# LANGUAGE BangPatterns,CPP #-}
shootout/fasta/Makefile:HC_OPTS += -O2 -XBangPatterns -XOverloadedStrings -package bytestring
shootout/spectral-norm/Makefile:HC_OPTS += -XBangPatterns -XMagicHash -O2 -fexcess-precision
shootout/reverse-complement/Makefile:HC_OPTS += -O2 -XBangPatterns -funfolding-use-threshold=32 -XMagicHash \
shootout/n-body/Makefile:HC_OPTS += -O2 -XBangPatterns -fexcess-precision
shootout/binary-trees/Makefile:HC_OPTS += -XBangPatterns -O2 -funbox-strict-fields
shootout/fannkuch-redux/Makefile:HC_OPTS += -XBangPatterns -O2
shootout/k-nucleotide/Makefile:HC_OPTS += -O2 -XBangPatterns -package bytestring
